/**
 * DO NOT EDIT THIS FILE!
 * File automatically generated by
 *   build_tools/enum_cc.py:170
 */

#include "base/compiler.hh"
#include "enums/X86IntelMPInterruptType.hh"

namespace gem5
{

GEM5_DEPRECATED_NAMESPACE(Enums, enums);
namespace enums
{
    const char *X86IntelMPInterruptTypeStrings[Num_X86IntelMPInterruptType] =
    {
        "ExtInt",
        "INT",
        "NMI",
        "SMI",
    };
} // namespace enums
} // namespace gem5
#include "pybind11/pybind11.h"
#include "pybind11/stl.h"

#include <sim/init.hh>

namespace py = pybind11;

namespace gem5
{

static void
module_init(py::module_ &m_internal)
{
    py::module_ m = m_internal.def_submodule("enum_X86IntelMPInterruptType");

py::enum_<enums::X86IntelMPInterruptType>(m, "enum_X86IntelMPInterruptType")
        .value("ExtInt", enums::ExtInt)
        .value("INT", enums::INT)
        .value("NMI", enums::NMI)
        .value("SMI", enums::SMI)
        .value("Num_X86IntelMPInterruptType", enums::Num_X86IntelMPInterruptType)
        .export_values()
        ;
    }
static EmbeddedPyBind embed_enum("enum_X86IntelMPInterruptType", module_init);

} // namespace gem5
    
