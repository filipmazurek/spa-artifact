/**
 * DO NOT EDIT THIS FILE!
 * File automatically generated by
 *   build_tools/enum_cc.py:170
 */

#include "base/compiler.hh"
#include "enums/ExtCharacteristic.hh"

namespace gem5
{

GEM5_DEPRECATED_NAMESPACE(Enums, enums);
namespace enums
{
    const char *ExtCharacteristicStrings[Num_ExtCharacteristic] =
    {
        "ACPI",
        "AGP",
        "BootSpec",
        "FirewireBoot",
        "I20Boot",
        "LS_120Boot",
        "NetServiceBoot",
        "SmartBattery",
        "TargetContent",
        "USBLegacy",
        "ZIPBoot",
    };
} // namespace enums
} // namespace gem5
#include "pybind11/pybind11.h"
#include "pybind11/stl.h"

#include <sim/init.hh>

namespace py = pybind11;

namespace gem5
{

static void
module_init(py::module_ &m_internal)
{
    py::module_ m = m_internal.def_submodule("enum_ExtCharacteristic");

py::enum_<enums::ExtCharacteristic>(m, "enum_ExtCharacteristic")
        .value("ACPI", enums::ACPI)
        .value("AGP", enums::AGP)
        .value("BootSpec", enums::BootSpec)
        .value("FirewireBoot", enums::FirewireBoot)
        .value("I20Boot", enums::I20Boot)
        .value("LS_120Boot", enums::LS_120Boot)
        .value("NetServiceBoot", enums::NetServiceBoot)
        .value("SmartBattery", enums::SmartBattery)
        .value("TargetContent", enums::TargetContent)
        .value("USBLegacy", enums::USBLegacy)
        .value("ZIPBoot", enums::ZIPBoot)
        .value("Num_ExtCharacteristic", enums::Num_ExtCharacteristic)
        .export_values()
        ;
    }
static EmbeddedPyBind embed_enum("enum_ExtCharacteristic", module_init);

} // namespace gem5
    
