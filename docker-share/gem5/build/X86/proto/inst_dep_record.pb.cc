// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: inst_dep_record.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "inst_dep_record.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ProtoMessage {

namespace {

const ::google::protobuf::Descriptor* InstDepRecordHeader_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InstDepRecordHeader_reflection_ = NULL;
const ::google::protobuf::Descriptor* InstDepRecord_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InstDepRecord_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* InstDepRecord_RecordType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_inst_5fdep_5frecord_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_inst_5fdep_5frecord_2eproto() {
  protobuf_AddDesc_inst_5fdep_5frecord_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "inst_dep_record.proto");
  GOOGLE_CHECK(file != NULL);
  InstDepRecordHeader_descriptor_ = file->message_type(0);
  static const int InstDepRecordHeader_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InstDepRecordHeader, obj_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InstDepRecordHeader, ver_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InstDepRecordHeader, tick_freq_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InstDepRecordHeader, window_size_),
  };
  InstDepRecordHeader_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      InstDepRecordHeader_descriptor_,
      InstDepRecordHeader::default_instance_,
      InstDepRecordHeader_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InstDepRecordHeader, _has_bits_[0]),
      -1,
      -1,
      sizeof(InstDepRecordHeader),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InstDepRecordHeader, _internal_metadata_),
      -1);
  InstDepRecord_descriptor_ = file->message_type(1);
  static const int InstDepRecord_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InstDepRecord, seq_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InstDepRecord, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InstDepRecord, p_addr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InstDepRecord, size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InstDepRecord, flags_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InstDepRecord, rob_dep_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InstDepRecord, comp_delay_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InstDepRecord, reg_dep_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InstDepRecord, weight_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InstDepRecord, pc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InstDepRecord, v_addr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InstDepRecord, asid_),
  };
  InstDepRecord_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      InstDepRecord_descriptor_,
      InstDepRecord::default_instance_,
      InstDepRecord_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InstDepRecord, _has_bits_[0]),
      -1,
      -1,
      sizeof(InstDepRecord),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InstDepRecord, _internal_metadata_),
      -1);
  InstDepRecord_RecordType_descriptor_ = InstDepRecord_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_inst_5fdep_5frecord_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      InstDepRecordHeader_descriptor_, &InstDepRecordHeader::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      InstDepRecord_descriptor_, &InstDepRecord::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_inst_5fdep_5frecord_2eproto() {
  delete InstDepRecordHeader::default_instance_;
  delete InstDepRecordHeader_reflection_;
  delete InstDepRecord::default_instance_;
  delete InstDepRecord_reflection_;
}

void protobuf_AddDesc_inst_5fdep_5frecord_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_inst_5fdep_5frecord_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025inst_dep_record.proto\022\014ProtoMessage\"]\n"
    "\023InstDepRecordHeader\022\016\n\006obj_id\030\001 \002(\t\022\016\n\003"
    "ver\030\002 \001(\r:\0010\022\021\n\ttick_freq\030\003 \002(\004\022\023\n\013windo"
    "w_size\030\004 \002(\r\"\266\002\n\rInstDepRecord\022\017\n\007seq_nu"
    "m\030\001 \002(\004\022=\n\004type\030\002 \002(\0162&.ProtoMessage.Ins"
    "tDepRecord.RecordType:\007INVALID\022\016\n\006p_addr"
    "\030\003 \001(\004\022\014\n\004size\030\004 \001(\r\022\r\n\005flags\030\005 \001(\r\022\017\n\007r"
    "ob_dep\030\006 \003(\004\022\022\n\ncomp_delay\030\007 \002(\004\022\017\n\007reg_"
    "dep\030\010 \003(\004\022\016\n\006weight\030\t \001(\r\022\n\n\002pc\030\n \001(\004\022\016\n"
    "\006v_addr\030\013 \001(\004\022\014\n\004asid\030\014 \001(\r\"8\n\nRecordTyp"
    "e\022\013\n\007INVALID\020\000\022\010\n\004LOAD\020\001\022\t\n\005STORE\020\002\022\010\n\004C"
    "OMP\020\003", 445);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "inst_dep_record.proto", &protobuf_RegisterTypes);
  InstDepRecordHeader::default_instance_ = new InstDepRecordHeader();
  InstDepRecord::default_instance_ = new InstDepRecord();
  InstDepRecordHeader::default_instance_->InitAsDefaultInstance();
  InstDepRecord::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_inst_5fdep_5frecord_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_inst_5fdep_5frecord_2eproto {
  StaticDescriptorInitializer_inst_5fdep_5frecord_2eproto() {
    protobuf_AddDesc_inst_5fdep_5frecord_2eproto();
  }
} static_descriptor_initializer_inst_5fdep_5frecord_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InstDepRecordHeader::kObjIdFieldNumber;
const int InstDepRecordHeader::kVerFieldNumber;
const int InstDepRecordHeader::kTickFreqFieldNumber;
const int InstDepRecordHeader::kWindowSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InstDepRecordHeader::InstDepRecordHeader()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoMessage.InstDepRecordHeader)
}

void InstDepRecordHeader::InitAsDefaultInstance() {
}

InstDepRecordHeader::InstDepRecordHeader(const InstDepRecordHeader& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoMessage.InstDepRecordHeader)
}

void InstDepRecordHeader::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  obj_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ver_ = 0u;
  tick_freq_ = GOOGLE_ULONGLONG(0);
  window_size_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InstDepRecordHeader::~InstDepRecordHeader() {
  // @@protoc_insertion_point(destructor:ProtoMessage.InstDepRecordHeader)
  SharedDtor();
}

void InstDepRecordHeader::SharedDtor() {
  obj_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void InstDepRecordHeader::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InstDepRecordHeader::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InstDepRecordHeader_descriptor_;
}

const InstDepRecordHeader& InstDepRecordHeader::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_inst_5fdep_5frecord_2eproto();
  return *default_instance_;
}

InstDepRecordHeader* InstDepRecordHeader::default_instance_ = NULL;

InstDepRecordHeader* InstDepRecordHeader::New(::google::protobuf::Arena* arena) const {
  InstDepRecordHeader* n = new InstDepRecordHeader;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InstDepRecordHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMessage.InstDepRecordHeader)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(InstDepRecordHeader, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<InstDepRecordHeader*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 15u) {
    ZR_(tick_freq_, window_size_);
    if (has_obj_id()) {
      obj_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool InstDepRecordHeader::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoMessage.InstDepRecordHeader)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string obj_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_obj_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->obj_id().data(), this->obj_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ProtoMessage.InstDepRecordHeader.obj_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ver;
        break;
      }

      // optional uint32 ver = 2 [default = 0];
      case 2: {
        if (tag == 16) {
         parse_ver:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ver_)));
          set_has_ver();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_tick_freq;
        break;
      }

      // required uint64 tick_freq = 3;
      case 3: {
        if (tag == 24) {
         parse_tick_freq:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &tick_freq_)));
          set_has_tick_freq();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_window_size;
        break;
      }

      // required uint32 window_size = 4;
      case 4: {
        if (tag == 32) {
         parse_window_size:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &window_size_)));
          set_has_window_size();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoMessage.InstDepRecordHeader)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoMessage.InstDepRecordHeader)
  return false;
#undef DO_
}

void InstDepRecordHeader::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoMessage.InstDepRecordHeader)
  // required string obj_id = 1;
  if (has_obj_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->obj_id().data(), this->obj_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ProtoMessage.InstDepRecordHeader.obj_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->obj_id(), output);
  }

  // optional uint32 ver = 2 [default = 0];
  if (has_ver()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ver(), output);
  }

  // required uint64 tick_freq = 3;
  if (has_tick_freq()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->tick_freq(), output);
  }

  // required uint32 window_size = 4;
  if (has_window_size()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->window_size(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoMessage.InstDepRecordHeader)
}

::google::protobuf::uint8* InstDepRecordHeader::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMessage.InstDepRecordHeader)
  // required string obj_id = 1;
  if (has_obj_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->obj_id().data(), this->obj_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ProtoMessage.InstDepRecordHeader.obj_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->obj_id(), target);
  }

  // optional uint32 ver = 2 [default = 0];
  if (has_ver()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ver(), target);
  }

  // required uint64 tick_freq = 3;
  if (has_tick_freq()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->tick_freq(), target);
  }

  // required uint32 window_size = 4;
  if (has_window_size()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->window_size(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMessage.InstDepRecordHeader)
  return target;
}

int InstDepRecordHeader::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ProtoMessage.InstDepRecordHeader)
  int total_size = 0;

  if (has_obj_id()) {
    // required string obj_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->obj_id());
  }

  if (has_tick_freq()) {
    // required uint64 tick_freq = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->tick_freq());
  }

  if (has_window_size()) {
    // required uint32 window_size = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->window_size());
  }

  return total_size;
}
int InstDepRecordHeader::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMessage.InstDepRecordHeader)
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000000d) ^ 0x0000000d) == 0) {  // All required fields are present.
    // required string obj_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->obj_id());

    // required uint64 tick_freq = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->tick_freq());

    // required uint32 window_size = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->window_size());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional uint32 ver = 2 [default = 0];
  if (has_ver()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ver());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InstDepRecordHeader::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoMessage.InstDepRecordHeader)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const InstDepRecordHeader* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const InstDepRecordHeader>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoMessage.InstDepRecordHeader)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoMessage.InstDepRecordHeader)
    MergeFrom(*source);
  }
}

void InstDepRecordHeader::MergeFrom(const InstDepRecordHeader& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMessage.InstDepRecordHeader)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_obj_id()) {
      set_has_obj_id();
      obj_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.obj_id_);
    }
    if (from.has_ver()) {
      set_ver(from.ver());
    }
    if (from.has_tick_freq()) {
      set_tick_freq(from.tick_freq());
    }
    if (from.has_window_size()) {
      set_window_size(from.window_size());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void InstDepRecordHeader::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoMessage.InstDepRecordHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InstDepRecordHeader::CopyFrom(const InstDepRecordHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMessage.InstDepRecordHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InstDepRecordHeader::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000d) != 0x0000000d) return false;

  return true;
}

void InstDepRecordHeader::Swap(InstDepRecordHeader* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InstDepRecordHeader::InternalSwap(InstDepRecordHeader* other) {
  obj_id_.Swap(&other->obj_id_);
  std::swap(ver_, other->ver_);
  std::swap(tick_freq_, other->tick_freq_);
  std::swap(window_size_, other->window_size_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InstDepRecordHeader::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InstDepRecordHeader_descriptor_;
  metadata.reflection = InstDepRecordHeader_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InstDepRecordHeader

// required string obj_id = 1;
bool InstDepRecordHeader::has_obj_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void InstDepRecordHeader::set_has_obj_id() {
  _has_bits_[0] |= 0x00000001u;
}
void InstDepRecordHeader::clear_has_obj_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void InstDepRecordHeader::clear_obj_id() {
  obj_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_obj_id();
}
 const ::std::string& InstDepRecordHeader::obj_id() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.InstDepRecordHeader.obj_id)
  return obj_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InstDepRecordHeader::set_obj_id(const ::std::string& value) {
  set_has_obj_id();
  obj_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtoMessage.InstDepRecordHeader.obj_id)
}
 void InstDepRecordHeader::set_obj_id(const char* value) {
  set_has_obj_id();
  obj_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtoMessage.InstDepRecordHeader.obj_id)
}
 void InstDepRecordHeader::set_obj_id(const char* value, size_t size) {
  set_has_obj_id();
  obj_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtoMessage.InstDepRecordHeader.obj_id)
}
 ::std::string* InstDepRecordHeader::mutable_obj_id() {
  set_has_obj_id();
  // @@protoc_insertion_point(field_mutable:ProtoMessage.InstDepRecordHeader.obj_id)
  return obj_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* InstDepRecordHeader::release_obj_id() {
  // @@protoc_insertion_point(field_release:ProtoMessage.InstDepRecordHeader.obj_id)
  clear_has_obj_id();
  return obj_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InstDepRecordHeader::set_allocated_obj_id(::std::string* obj_id) {
  if (obj_id != NULL) {
    set_has_obj_id();
  } else {
    clear_has_obj_id();
  }
  obj_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), obj_id);
  // @@protoc_insertion_point(field_set_allocated:ProtoMessage.InstDepRecordHeader.obj_id)
}

// optional uint32 ver = 2 [default = 0];
bool InstDepRecordHeader::has_ver() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void InstDepRecordHeader::set_has_ver() {
  _has_bits_[0] |= 0x00000002u;
}
void InstDepRecordHeader::clear_has_ver() {
  _has_bits_[0] &= ~0x00000002u;
}
void InstDepRecordHeader::clear_ver() {
  ver_ = 0u;
  clear_has_ver();
}
 ::google::protobuf::uint32 InstDepRecordHeader::ver() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.InstDepRecordHeader.ver)
  return ver_;
}
 void InstDepRecordHeader::set_ver(::google::protobuf::uint32 value) {
  set_has_ver();
  ver_ = value;
  // @@protoc_insertion_point(field_set:ProtoMessage.InstDepRecordHeader.ver)
}

// required uint64 tick_freq = 3;
bool InstDepRecordHeader::has_tick_freq() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void InstDepRecordHeader::set_has_tick_freq() {
  _has_bits_[0] |= 0x00000004u;
}
void InstDepRecordHeader::clear_has_tick_freq() {
  _has_bits_[0] &= ~0x00000004u;
}
void InstDepRecordHeader::clear_tick_freq() {
  tick_freq_ = GOOGLE_ULONGLONG(0);
  clear_has_tick_freq();
}
 ::google::protobuf::uint64 InstDepRecordHeader::tick_freq() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.InstDepRecordHeader.tick_freq)
  return tick_freq_;
}
 void InstDepRecordHeader::set_tick_freq(::google::protobuf::uint64 value) {
  set_has_tick_freq();
  tick_freq_ = value;
  // @@protoc_insertion_point(field_set:ProtoMessage.InstDepRecordHeader.tick_freq)
}

// required uint32 window_size = 4;
bool InstDepRecordHeader::has_window_size() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void InstDepRecordHeader::set_has_window_size() {
  _has_bits_[0] |= 0x00000008u;
}
void InstDepRecordHeader::clear_has_window_size() {
  _has_bits_[0] &= ~0x00000008u;
}
void InstDepRecordHeader::clear_window_size() {
  window_size_ = 0u;
  clear_has_window_size();
}
 ::google::protobuf::uint32 InstDepRecordHeader::window_size() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.InstDepRecordHeader.window_size)
  return window_size_;
}
 void InstDepRecordHeader::set_window_size(::google::protobuf::uint32 value) {
  set_has_window_size();
  window_size_ = value;
  // @@protoc_insertion_point(field_set:ProtoMessage.InstDepRecordHeader.window_size)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* InstDepRecord_RecordType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InstDepRecord_RecordType_descriptor_;
}
bool InstDepRecord_RecordType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const InstDepRecord_RecordType InstDepRecord::INVALID;
const InstDepRecord_RecordType InstDepRecord::LOAD;
const InstDepRecord_RecordType InstDepRecord::STORE;
const InstDepRecord_RecordType InstDepRecord::COMP;
const InstDepRecord_RecordType InstDepRecord::RecordType_MIN;
const InstDepRecord_RecordType InstDepRecord::RecordType_MAX;
const int InstDepRecord::RecordType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InstDepRecord::kSeqNumFieldNumber;
const int InstDepRecord::kTypeFieldNumber;
const int InstDepRecord::kPAddrFieldNumber;
const int InstDepRecord::kSizeFieldNumber;
const int InstDepRecord::kFlagsFieldNumber;
const int InstDepRecord::kRobDepFieldNumber;
const int InstDepRecord::kCompDelayFieldNumber;
const int InstDepRecord::kRegDepFieldNumber;
const int InstDepRecord::kWeightFieldNumber;
const int InstDepRecord::kPcFieldNumber;
const int InstDepRecord::kVAddrFieldNumber;
const int InstDepRecord::kAsidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InstDepRecord::InstDepRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoMessage.InstDepRecord)
}

void InstDepRecord::InitAsDefaultInstance() {
}

InstDepRecord::InstDepRecord(const InstDepRecord& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtoMessage.InstDepRecord)
}

void InstDepRecord::SharedCtor() {
  _cached_size_ = 0;
  seq_num_ = GOOGLE_ULONGLONG(0);
  type_ = 0;
  p_addr_ = GOOGLE_ULONGLONG(0);
  size_ = 0u;
  flags_ = 0u;
  comp_delay_ = GOOGLE_ULONGLONG(0);
  weight_ = 0u;
  pc_ = GOOGLE_ULONGLONG(0);
  v_addr_ = GOOGLE_ULONGLONG(0);
  asid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InstDepRecord::~InstDepRecord() {
  // @@protoc_insertion_point(destructor:ProtoMessage.InstDepRecord)
  SharedDtor();
}

void InstDepRecord::SharedDtor() {
  if (this != default_instance_) {
  }
}

void InstDepRecord::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InstDepRecord::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InstDepRecord_descriptor_;
}

const InstDepRecord& InstDepRecord::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_inst_5fdep_5frecord_2eproto();
  return *default_instance_;
}

InstDepRecord* InstDepRecord::default_instance_ = NULL;

InstDepRecord* InstDepRecord::New(::google::protobuf::Arena* arena) const {
  InstDepRecord* n = new InstDepRecord;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InstDepRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMessage.InstDepRecord)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(InstDepRecord, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<InstDepRecord*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 95u) {
    ZR_(seq_num_, size_);
    ZR_(comp_delay_, flags_);
  }
  if (_has_bits_[8 / 32] & 3840u) {
    ZR_(pc_, asid_);
    weight_ = 0u;
  }

#undef ZR_HELPER_
#undef ZR_

  rob_dep_.Clear();
  reg_dep_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool InstDepRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoMessage.InstDepRecord)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 seq_num = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &seq_num_)));
          set_has_seq_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // required .ProtoMessage.InstDepRecord.RecordType type = 2 [default = INVALID];
      case 2: {
        if (tag == 16) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::ProtoMessage::InstDepRecord_RecordType_IsValid(value)) {
            set_type(static_cast< ::ProtoMessage::InstDepRecord_RecordType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_p_addr;
        break;
      }

      // optional uint64 p_addr = 3;
      case 3: {
        if (tag == 24) {
         parse_p_addr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &p_addr_)));
          set_has_p_addr();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_size;
        break;
      }

      // optional uint32 size = 4;
      case 4: {
        if (tag == 32) {
         parse_size:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &size_)));
          set_has_size();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_flags;
        break;
      }

      // optional uint32 flags = 5;
      case 5: {
        if (tag == 40) {
         parse_flags:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flags_)));
          set_has_flags();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_rob_dep;
        break;
      }

      // repeated uint64 rob_dep = 6;
      case 6: {
        if (tag == 48) {
         parse_rob_dep:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 48, input, this->mutable_rob_dep())));
        } else if (tag == 50) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_rob_dep())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_rob_dep;
        if (input->ExpectTag(56)) goto parse_comp_delay;
        break;
      }

      // required uint64 comp_delay = 7;
      case 7: {
        if (tag == 56) {
         parse_comp_delay:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &comp_delay_)));
          set_has_comp_delay();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_reg_dep;
        break;
      }

      // repeated uint64 reg_dep = 8;
      case 8: {
        if (tag == 64) {
         parse_reg_dep:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 64, input, this->mutable_reg_dep())));
        } else if (tag == 66) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_reg_dep())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_reg_dep;
        if (input->ExpectTag(72)) goto parse_weight;
        break;
      }

      // optional uint32 weight = 9;
      case 9: {
        if (tag == 72) {
         parse_weight:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &weight_)));
          set_has_weight();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_pc;
        break;
      }

      // optional uint64 pc = 10;
      case 10: {
        if (tag == 80) {
         parse_pc:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &pc_)));
          set_has_pc();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_v_addr;
        break;
      }

      // optional uint64 v_addr = 11;
      case 11: {
        if (tag == 88) {
         parse_v_addr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &v_addr_)));
          set_has_v_addr();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_asid;
        break;
      }

      // optional uint32 asid = 12;
      case 12: {
        if (tag == 96) {
         parse_asid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &asid_)));
          set_has_asid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoMessage.InstDepRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoMessage.InstDepRecord)
  return false;
#undef DO_
}

void InstDepRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoMessage.InstDepRecord)
  // required uint64 seq_num = 1;
  if (has_seq_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->seq_num(), output);
  }

  // required .ProtoMessage.InstDepRecord.RecordType type = 2 [default = INVALID];
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // optional uint64 p_addr = 3;
  if (has_p_addr()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->p_addr(), output);
  }

  // optional uint32 size = 4;
  if (has_size()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->size(), output);
  }

  // optional uint32 flags = 5;
  if (has_flags()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->flags(), output);
  }

  // repeated uint64 rob_dep = 6;
  for (int i = 0; i < this->rob_dep_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      6, this->rob_dep(i), output);
  }

  // required uint64 comp_delay = 7;
  if (has_comp_delay()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->comp_delay(), output);
  }

  // repeated uint64 reg_dep = 8;
  for (int i = 0; i < this->reg_dep_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      8, this->reg_dep(i), output);
  }

  // optional uint32 weight = 9;
  if (has_weight()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->weight(), output);
  }

  // optional uint64 pc = 10;
  if (has_pc()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(10, this->pc(), output);
  }

  // optional uint64 v_addr = 11;
  if (has_v_addr()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(11, this->v_addr(), output);
  }

  // optional uint32 asid = 12;
  if (has_asid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->asid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoMessage.InstDepRecord)
}

::google::protobuf::uint8* InstDepRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMessage.InstDepRecord)
  // required uint64 seq_num = 1;
  if (has_seq_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->seq_num(), target);
  }

  // required .ProtoMessage.InstDepRecord.RecordType type = 2 [default = INVALID];
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // optional uint64 p_addr = 3;
  if (has_p_addr()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->p_addr(), target);
  }

  // optional uint32 size = 4;
  if (has_size()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->size(), target);
  }

  // optional uint32 flags = 5;
  if (has_flags()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->flags(), target);
  }

  // repeated uint64 rob_dep = 6;
  for (int i = 0; i < this->rob_dep_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(6, this->rob_dep(i), target);
  }

  // required uint64 comp_delay = 7;
  if (has_comp_delay()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->comp_delay(), target);
  }

  // repeated uint64 reg_dep = 8;
  for (int i = 0; i < this->reg_dep_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(8, this->reg_dep(i), target);
  }

  // optional uint32 weight = 9;
  if (has_weight()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->weight(), target);
  }

  // optional uint64 pc = 10;
  if (has_pc()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(10, this->pc(), target);
  }

  // optional uint64 v_addr = 11;
  if (has_v_addr()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(11, this->v_addr(), target);
  }

  // optional uint32 asid = 12;
  if (has_asid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->asid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMessage.InstDepRecord)
  return target;
}

int InstDepRecord::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ProtoMessage.InstDepRecord)
  int total_size = 0;

  if (has_seq_num()) {
    // required uint64 seq_num = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->seq_num());
  }

  if (has_type()) {
    // required .ProtoMessage.InstDepRecord.RecordType type = 2 [default = INVALID];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  if (has_comp_delay()) {
    // required uint64 comp_delay = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->comp_delay());
  }

  return total_size;
}
int InstDepRecord::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMessage.InstDepRecord)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000043) ^ 0x00000043) == 0) {  // All required fields are present.
    // required uint64 seq_num = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->seq_num());

    // required .ProtoMessage.InstDepRecord.RecordType type = 2 [default = INVALID];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());

    // required uint64 comp_delay = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->comp_delay());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[2 / 32] & 28u) {
    // optional uint64 p_addr = 3;
    if (has_p_addr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->p_addr());
    }

    // optional uint32 size = 4;
    if (has_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->size());
    }

    // optional uint32 flags = 5;
    if (has_flags()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->flags());
    }

  }
  if (_has_bits_[8 / 32] & 3840u) {
    // optional uint32 weight = 9;
    if (has_weight()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->weight());
    }

    // optional uint64 pc = 10;
    if (has_pc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->pc());
    }

    // optional uint64 v_addr = 11;
    if (has_v_addr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->v_addr());
    }

    // optional uint32 asid = 12;
    if (has_asid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->asid());
    }

  }
  // repeated uint64 rob_dep = 6;
  {
    int data_size = 0;
    for (int i = 0; i < this->rob_dep_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->rob_dep(i));
    }
    total_size += 1 * this->rob_dep_size() + data_size;
  }

  // repeated uint64 reg_dep = 8;
  {
    int data_size = 0;
    for (int i = 0; i < this->reg_dep_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->reg_dep(i));
    }
    total_size += 1 * this->reg_dep_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InstDepRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoMessage.InstDepRecord)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const InstDepRecord* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const InstDepRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoMessage.InstDepRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoMessage.InstDepRecord)
    MergeFrom(*source);
  }
}

void InstDepRecord::MergeFrom(const InstDepRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMessage.InstDepRecord)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  rob_dep_.MergeFrom(from.rob_dep_);
  reg_dep_.MergeFrom(from.reg_dep_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_seq_num()) {
      set_seq_num(from.seq_num());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_p_addr()) {
      set_p_addr(from.p_addr());
    }
    if (from.has_size()) {
      set_size(from.size());
    }
    if (from.has_flags()) {
      set_flags(from.flags());
    }
    if (from.has_comp_delay()) {
      set_comp_delay(from.comp_delay());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_weight()) {
      set_weight(from.weight());
    }
    if (from.has_pc()) {
      set_pc(from.pc());
    }
    if (from.has_v_addr()) {
      set_v_addr(from.v_addr());
    }
    if (from.has_asid()) {
      set_asid(from.asid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void InstDepRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoMessage.InstDepRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InstDepRecord::CopyFrom(const InstDepRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMessage.InstDepRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InstDepRecord::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000043) != 0x00000043) return false;

  return true;
}

void InstDepRecord::Swap(InstDepRecord* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InstDepRecord::InternalSwap(InstDepRecord* other) {
  std::swap(seq_num_, other->seq_num_);
  std::swap(type_, other->type_);
  std::swap(p_addr_, other->p_addr_);
  std::swap(size_, other->size_);
  std::swap(flags_, other->flags_);
  rob_dep_.UnsafeArenaSwap(&other->rob_dep_);
  std::swap(comp_delay_, other->comp_delay_);
  reg_dep_.UnsafeArenaSwap(&other->reg_dep_);
  std::swap(weight_, other->weight_);
  std::swap(pc_, other->pc_);
  std::swap(v_addr_, other->v_addr_);
  std::swap(asid_, other->asid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InstDepRecord::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InstDepRecord_descriptor_;
  metadata.reflection = InstDepRecord_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InstDepRecord

// required uint64 seq_num = 1;
bool InstDepRecord::has_seq_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void InstDepRecord::set_has_seq_num() {
  _has_bits_[0] |= 0x00000001u;
}
void InstDepRecord::clear_has_seq_num() {
  _has_bits_[0] &= ~0x00000001u;
}
void InstDepRecord::clear_seq_num() {
  seq_num_ = GOOGLE_ULONGLONG(0);
  clear_has_seq_num();
}
 ::google::protobuf::uint64 InstDepRecord::seq_num() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.InstDepRecord.seq_num)
  return seq_num_;
}
 void InstDepRecord::set_seq_num(::google::protobuf::uint64 value) {
  set_has_seq_num();
  seq_num_ = value;
  // @@protoc_insertion_point(field_set:ProtoMessage.InstDepRecord.seq_num)
}

// required .ProtoMessage.InstDepRecord.RecordType type = 2 [default = INVALID];
bool InstDepRecord::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void InstDepRecord::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
void InstDepRecord::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void InstDepRecord::clear_type() {
  type_ = 0;
  clear_has_type();
}
 ::ProtoMessage::InstDepRecord_RecordType InstDepRecord::type() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.InstDepRecord.type)
  return static_cast< ::ProtoMessage::InstDepRecord_RecordType >(type_);
}
 void InstDepRecord::set_type(::ProtoMessage::InstDepRecord_RecordType value) {
  assert(::ProtoMessage::InstDepRecord_RecordType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:ProtoMessage.InstDepRecord.type)
}

// optional uint64 p_addr = 3;
bool InstDepRecord::has_p_addr() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void InstDepRecord::set_has_p_addr() {
  _has_bits_[0] |= 0x00000004u;
}
void InstDepRecord::clear_has_p_addr() {
  _has_bits_[0] &= ~0x00000004u;
}
void InstDepRecord::clear_p_addr() {
  p_addr_ = GOOGLE_ULONGLONG(0);
  clear_has_p_addr();
}
 ::google::protobuf::uint64 InstDepRecord::p_addr() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.InstDepRecord.p_addr)
  return p_addr_;
}
 void InstDepRecord::set_p_addr(::google::protobuf::uint64 value) {
  set_has_p_addr();
  p_addr_ = value;
  // @@protoc_insertion_point(field_set:ProtoMessage.InstDepRecord.p_addr)
}

// optional uint32 size = 4;
bool InstDepRecord::has_size() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void InstDepRecord::set_has_size() {
  _has_bits_[0] |= 0x00000008u;
}
void InstDepRecord::clear_has_size() {
  _has_bits_[0] &= ~0x00000008u;
}
void InstDepRecord::clear_size() {
  size_ = 0u;
  clear_has_size();
}
 ::google::protobuf::uint32 InstDepRecord::size() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.InstDepRecord.size)
  return size_;
}
 void InstDepRecord::set_size(::google::protobuf::uint32 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:ProtoMessage.InstDepRecord.size)
}

// optional uint32 flags = 5;
bool InstDepRecord::has_flags() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void InstDepRecord::set_has_flags() {
  _has_bits_[0] |= 0x00000010u;
}
void InstDepRecord::clear_has_flags() {
  _has_bits_[0] &= ~0x00000010u;
}
void InstDepRecord::clear_flags() {
  flags_ = 0u;
  clear_has_flags();
}
 ::google::protobuf::uint32 InstDepRecord::flags() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.InstDepRecord.flags)
  return flags_;
}
 void InstDepRecord::set_flags(::google::protobuf::uint32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:ProtoMessage.InstDepRecord.flags)
}

// repeated uint64 rob_dep = 6;
int InstDepRecord::rob_dep_size() const {
  return rob_dep_.size();
}
void InstDepRecord::clear_rob_dep() {
  rob_dep_.Clear();
}
 ::google::protobuf::uint64 InstDepRecord::rob_dep(int index) const {
  // @@protoc_insertion_point(field_get:ProtoMessage.InstDepRecord.rob_dep)
  return rob_dep_.Get(index);
}
 void InstDepRecord::set_rob_dep(int index, ::google::protobuf::uint64 value) {
  rob_dep_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoMessage.InstDepRecord.rob_dep)
}
 void InstDepRecord::add_rob_dep(::google::protobuf::uint64 value) {
  rob_dep_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoMessage.InstDepRecord.rob_dep)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
InstDepRecord::rob_dep() const {
  // @@protoc_insertion_point(field_list:ProtoMessage.InstDepRecord.rob_dep)
  return rob_dep_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
InstDepRecord::mutable_rob_dep() {
  // @@protoc_insertion_point(field_mutable_list:ProtoMessage.InstDepRecord.rob_dep)
  return &rob_dep_;
}

// required uint64 comp_delay = 7;
bool InstDepRecord::has_comp_delay() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void InstDepRecord::set_has_comp_delay() {
  _has_bits_[0] |= 0x00000040u;
}
void InstDepRecord::clear_has_comp_delay() {
  _has_bits_[0] &= ~0x00000040u;
}
void InstDepRecord::clear_comp_delay() {
  comp_delay_ = GOOGLE_ULONGLONG(0);
  clear_has_comp_delay();
}
 ::google::protobuf::uint64 InstDepRecord::comp_delay() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.InstDepRecord.comp_delay)
  return comp_delay_;
}
 void InstDepRecord::set_comp_delay(::google::protobuf::uint64 value) {
  set_has_comp_delay();
  comp_delay_ = value;
  // @@protoc_insertion_point(field_set:ProtoMessage.InstDepRecord.comp_delay)
}

// repeated uint64 reg_dep = 8;
int InstDepRecord::reg_dep_size() const {
  return reg_dep_.size();
}
void InstDepRecord::clear_reg_dep() {
  reg_dep_.Clear();
}
 ::google::protobuf::uint64 InstDepRecord::reg_dep(int index) const {
  // @@protoc_insertion_point(field_get:ProtoMessage.InstDepRecord.reg_dep)
  return reg_dep_.Get(index);
}
 void InstDepRecord::set_reg_dep(int index, ::google::protobuf::uint64 value) {
  reg_dep_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoMessage.InstDepRecord.reg_dep)
}
 void InstDepRecord::add_reg_dep(::google::protobuf::uint64 value) {
  reg_dep_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoMessage.InstDepRecord.reg_dep)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
InstDepRecord::reg_dep() const {
  // @@protoc_insertion_point(field_list:ProtoMessage.InstDepRecord.reg_dep)
  return reg_dep_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
InstDepRecord::mutable_reg_dep() {
  // @@protoc_insertion_point(field_mutable_list:ProtoMessage.InstDepRecord.reg_dep)
  return &reg_dep_;
}

// optional uint32 weight = 9;
bool InstDepRecord::has_weight() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void InstDepRecord::set_has_weight() {
  _has_bits_[0] |= 0x00000100u;
}
void InstDepRecord::clear_has_weight() {
  _has_bits_[0] &= ~0x00000100u;
}
void InstDepRecord::clear_weight() {
  weight_ = 0u;
  clear_has_weight();
}
 ::google::protobuf::uint32 InstDepRecord::weight() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.InstDepRecord.weight)
  return weight_;
}
 void InstDepRecord::set_weight(::google::protobuf::uint32 value) {
  set_has_weight();
  weight_ = value;
  // @@protoc_insertion_point(field_set:ProtoMessage.InstDepRecord.weight)
}

// optional uint64 pc = 10;
bool InstDepRecord::has_pc() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void InstDepRecord::set_has_pc() {
  _has_bits_[0] |= 0x00000200u;
}
void InstDepRecord::clear_has_pc() {
  _has_bits_[0] &= ~0x00000200u;
}
void InstDepRecord::clear_pc() {
  pc_ = GOOGLE_ULONGLONG(0);
  clear_has_pc();
}
 ::google::protobuf::uint64 InstDepRecord::pc() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.InstDepRecord.pc)
  return pc_;
}
 void InstDepRecord::set_pc(::google::protobuf::uint64 value) {
  set_has_pc();
  pc_ = value;
  // @@protoc_insertion_point(field_set:ProtoMessage.InstDepRecord.pc)
}

// optional uint64 v_addr = 11;
bool InstDepRecord::has_v_addr() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void InstDepRecord::set_has_v_addr() {
  _has_bits_[0] |= 0x00000400u;
}
void InstDepRecord::clear_has_v_addr() {
  _has_bits_[0] &= ~0x00000400u;
}
void InstDepRecord::clear_v_addr() {
  v_addr_ = GOOGLE_ULONGLONG(0);
  clear_has_v_addr();
}
 ::google::protobuf::uint64 InstDepRecord::v_addr() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.InstDepRecord.v_addr)
  return v_addr_;
}
 void InstDepRecord::set_v_addr(::google::protobuf::uint64 value) {
  set_has_v_addr();
  v_addr_ = value;
  // @@protoc_insertion_point(field_set:ProtoMessage.InstDepRecord.v_addr)
}

// optional uint32 asid = 12;
bool InstDepRecord::has_asid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void InstDepRecord::set_has_asid() {
  _has_bits_[0] |= 0x00000800u;
}
void InstDepRecord::clear_has_asid() {
  _has_bits_[0] &= ~0x00000800u;
}
void InstDepRecord::clear_asid() {
  asid_ = 0u;
  clear_has_asid();
}
 ::google::protobuf::uint32 InstDepRecord::asid() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.InstDepRecord.asid)
  return asid_;
}
 void InstDepRecord::set_asid(::google::protobuf::uint32 value) {
  set_has_asid();
  asid_ = value;
  // @@protoc_insertion_point(field_set:ProtoMessage.InstDepRecord.asid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoMessage

// @@protoc_insertion_point(global_scope)
