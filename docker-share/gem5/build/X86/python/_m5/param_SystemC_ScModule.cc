/**
 * DO NOT EDIT THIS FILE!
 * File automatically generated by
 *   build_tools/sim_object_param_struct_cc.py:297
 */

#include "pybind11/pybind11.h"
#include "pybind11/stl.h"

#include <type_traits>

#include "base/compiler.hh"
#include "params/SystemC_ScModule.hh"
#include "sim/init.hh"
#include "sim/sim_object.hh"

#include "systemc/ext/core/sc_module.hh"

namespace py = pybind11;

namespace gem5
{

static void
module_init(py::module_ &m_internal)
{
py::module_ m = m_internal.def_submodule("param_SystemC_ScModule");
    py::class_<SystemC_ScModuleParams, SystemC_ScObjectParams, std::unique_ptr<SystemC_ScModuleParams, py::nodelete>>(m, "SystemC_ScModuleParams")
        ;

    py::class_<sc_core::sc_module, sc_core::sc_object, std::unique_ptr<sc_core::sc_module, py::nodelete>>(m, "sc_core_COLONS_sc_module")
        .def("getPort", &sc_core::sc_module::gem5_getPort, pybind11::return_value_policy::reference, py::arg("if_name"), py::arg("iex"))
        ;

}

static EmbeddedPyBind embed_obj("SystemC_ScModule", module_init, "SystemC_ScObject");

} // namespace gem5
