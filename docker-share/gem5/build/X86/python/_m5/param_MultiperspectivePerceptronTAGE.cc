/**
 * DO NOT EDIT THIS FILE!
 * File automatically generated by
 *   build_tools/sim_object_param_struct_cc.py:297
 */

#include "pybind11/pybind11.h"
#include "pybind11/stl.h"

#include <type_traits>

#include "base/compiler.hh"
#include "params/MultiperspectivePerceptronTAGE.hh"
#include "sim/init.hh"
#include "sim/sim_object.hh"

#include "cpu/pred/multiperspective_perceptron_tage.hh"

#include "cpu/pred/loop_predictor.hh"
#include "cpu/pred/statistical_corrector.hh"
#include "cpu/pred/tage_base.hh"
namespace py = pybind11;

namespace gem5
{

static void
module_init(py::module_ &m_internal)
{
py::module_ m = m_internal.def_submodule("param_MultiperspectivePerceptronTAGE");
    py::class_<MultiperspectivePerceptronTAGEParams, MultiperspectivePerceptronParams, std::unique_ptr<MultiperspectivePerceptronTAGEParams, py::nodelete>>(m, "MultiperspectivePerceptronTAGEParams")
        .def_readwrite("loop_predictor", &MultiperspectivePerceptronTAGEParams::loop_predictor)
        .def_readwrite("statistical_corrector", &MultiperspectivePerceptronTAGEParams::statistical_corrector)
        .def_readwrite("tage", &MultiperspectivePerceptronTAGEParams::tage)
        ;

    py::class_<gem5::branch_prediction::MultiperspectivePerceptronTAGE, gem5::branch_prediction::MultiperspectivePerceptron, std::unique_ptr<gem5::branch_prediction::MultiperspectivePerceptronTAGE, py::nodelete>>(m, "gem5_COLONS_branch_prediction_COLONS_MultiperspectivePerceptronTAGE")
        ;

}

static EmbeddedPyBind embed_obj("MultiperspectivePerceptronTAGE", module_init, "MultiperspectivePerceptron");

} // namespace gem5
