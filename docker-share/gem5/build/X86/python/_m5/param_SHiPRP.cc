/**
 * DO NOT EDIT THIS FILE!
 * File automatically generated by
 *   build_tools/sim_object_param_struct_cc.py:297
 */

#include "pybind11/pybind11.h"
#include "pybind11/stl.h"

#include <type_traits>

#include "base/compiler.hh"
#include "params/SHiPRP.hh"
#include "sim/init.hh"
#include "sim/sim_object.hh"

#include "mem/cache/replacement_policies/ship_rp.hh"

#include "base/types.hh"
#include "base/types.hh"
namespace py = pybind11;

namespace gem5
{

static void
module_init(py::module_ &m_internal)
{
py::module_ m = m_internal.def_submodule("param_SHiPRP");
    py::class_<SHiPRPParams, BRRIPRPParams, std::unique_ptr<SHiPRPParams, py::nodelete>>(m, "SHiPRPParams")
        .def_readwrite("insertion_threshold", &SHiPRPParams::insertion_threshold)
        .def_readwrite("shct_size", &SHiPRPParams::shct_size)
        ;

    py::class_<gem5::replacement_policy::SHiP, gem5::replacement_policy::BRRIP, std::unique_ptr<gem5::replacement_policy::SHiP, py::nodelete>>(m, "gem5_COLONS_replacement_policy_COLONS_SHiP")
        ;

}

static EmbeddedPyBind embed_obj("SHiPRP", module_init, "BRRIPRP");

} // namespace gem5
