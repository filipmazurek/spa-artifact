/**
 * DO NOT EDIT THIS FILE!
 * File automatically generated by
 *   build_tools/sim_object_param_struct_cc.py:297
 */

#include "pybind11/pybind11.h"
#include "pybind11/stl.h"

#include <type_traits>

#include "base/compiler.hh"
#include "params/DmaDevice.hh"
#include "sim/init.hh"
#include "sim/sim_object.hh"

#include "dev/dma_device.hh"

#include "base/types.hh"
#include "base/types.hh"
namespace py = pybind11;

namespace gem5
{

static void
module_init(py::module_ &m_internal)
{
py::module_ m = m_internal.def_submodule("param_DmaDevice");
    py::class_<DmaDeviceParams, PioDeviceParams, std::unique_ptr<DmaDeviceParams, py::nodelete>>(m, "DmaDeviceParams")
        .def_readwrite("sid", &DmaDeviceParams::sid)
        .def_readwrite("ssid", &DmaDeviceParams::ssid)
        .def_readwrite("port_dma_connection_count", &DmaDeviceParams::port_dma_connection_count)
        ;

    py::class_<gem5::DmaDevice, gem5::PioDevice, std::unique_ptr<gem5::DmaDevice, py::nodelete>>(m, "gem5_COLONS_DmaDevice")
        ;

}

static EmbeddedPyBind embed_obj("DmaDevice", module_init, "PioDevice");

} // namespace gem5
