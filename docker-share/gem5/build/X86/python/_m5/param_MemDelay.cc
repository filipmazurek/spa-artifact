/**
 * DO NOT EDIT THIS FILE!
 * File automatically generated by
 *   build_tools/sim_object_param_struct_cc.py:297
 */

#include "pybind11/pybind11.h"
#include "pybind11/stl.h"

#include <type_traits>

#include "base/compiler.hh"
#include "params/MemDelay.hh"
#include "sim/init.hh"
#include "sim/sim_object.hh"

#include "mem/mem_delay.hh"

namespace py = pybind11;

namespace gem5
{

static void
module_init(py::module_ &m_internal)
{
py::module_ m = m_internal.def_submodule("param_MemDelay");
    py::class_<MemDelayParams, ClockedObjectParams, std::unique_ptr<MemDelayParams, py::nodelete>>(m, "MemDelayParams")
        .def_readwrite("port_mem_side_port_connection_count", &MemDelayParams::port_mem_side_port_connection_count)
        .def_readwrite("port_cpu_side_port_connection_count", &MemDelayParams::port_cpu_side_port_connection_count)
        ;

    py::class_<gem5::MemDelay, gem5::ClockedObject, std::unique_ptr<gem5::MemDelay, py::nodelete>>(m, "gem5_COLONS_MemDelay")
        ;

}

static EmbeddedPyBind embed_obj("MemDelay", module_init, "ClockedObject");

} // namespace gem5
