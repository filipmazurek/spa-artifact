/**
 * DO NOT EDIT THIS FILE!
 * File automatically generated by
 *   build_tools/sim_object_param_struct_cc.py:297
 */

#include "pybind11/pybind11.h"
#include "pybind11/stl.h"

#include <type_traits>

#include "base/compiler.hh"
#include "params/BaseXBar.hh"
#include "sim/init.hh"
#include "sim/sim_object.hh"

#include "mem/xbar.hh"

#include "base/types.hh"
#include "base/types.hh"
#include "base/types.hh"
#include "base/types.hh"
#include "base/types.hh"
namespace py = pybind11;

namespace gem5
{

static void
module_init(py::module_ &m_internal)
{
py::module_ m = m_internal.def_submodule("param_BaseXBar");
    py::class_<BaseXBarParams, ClockedObjectParams, std::unique_ptr<BaseXBarParams, py::nodelete>>(m, "BaseXBarParams")
        .def_readwrite("forward_latency", &BaseXBarParams::forward_latency)
        .def_readwrite("frontend_latency", &BaseXBarParams::frontend_latency)
        .def_readwrite("header_latency", &BaseXBarParams::header_latency)
        .def_readwrite("response_latency", &BaseXBarParams::response_latency)
        .def_readwrite("use_default_range", &BaseXBarParams::use_default_range)
        .def_readwrite("width", &BaseXBarParams::width)
        .def_readwrite("port_cpu_side_ports_connection_count", &BaseXBarParams::port_cpu_side_ports_connection_count)
        .def_readwrite("port_mem_side_ports_connection_count", &BaseXBarParams::port_mem_side_ports_connection_count)
        .def_readwrite("port_default_connection_count", &BaseXBarParams::port_default_connection_count)
        ;

    py::class_<gem5::BaseXBar, gem5::ClockedObject, std::unique_ptr<gem5::BaseXBar, py::nodelete>>(m, "gem5_COLONS_BaseXBar")
        ;

}

static EmbeddedPyBind embed_obj("BaseXBar", module_init, "ClockedObject");

} // namespace gem5
