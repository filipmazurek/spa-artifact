/**
 * DO NOT EDIT THIS FILE!
 * File automatically generated by
 *   build_tools/sim_object_param_struct_cc.py:297
 */

#include "pybind11/pybind11.h"
#include "pybind11/stl.h"

#include <type_traits>

#include "base/compiler.hh"
#include "params/RubyController.hh"
#include "sim/init.hh"
#include "sim/sim_object.hh"

#include "mem/ruby/slicc_interface/AbstractController.hh"

#include <vector>
#include "base/types.hh"
#include "base/addr_range.hh"
#include "base/types.hh"
#include "base/types.hh"
#include <vector>
#include "mem/ruby/slicc_interface/AbstractController.hh"
#include "base/types.hh"
#include "base/types.hh"
#include "base/types.hh"
#include "mem/ruby/system/RubySystem.hh"
#include "sim/system.hh"
#include "base/types.hh"
#include <vector>
#include "mem/ruby/slicc_interface/AbstractController.hh"
#include "base/types.hh"
namespace py = pybind11;

namespace gem5
{

static void
module_init(py::module_ &m_internal)
{
py::module_ m = m_internal.def_submodule("param_RubyController");
    py::class_<RubyControllerParams, ClockedObjectParams, std::unique_ptr<RubyControllerParams, py::nodelete>>(m, "RubyControllerParams")
        .def_readwrite("addr_ranges", &RubyControllerParams::addr_ranges)
        .def_readwrite("buffer_size", &RubyControllerParams::buffer_size)
        .def_readwrite("cluster_id", &RubyControllerParams::cluster_id)
        .def_readwrite("downstream_destinations", &RubyControllerParams::downstream_destinations)
        .def_readwrite("mandatory_queue_latency", &RubyControllerParams::mandatory_queue_latency)
        .def_readwrite("number_of_TBEs", &RubyControllerParams::number_of_TBEs)
        .def_readwrite("recycle_latency", &RubyControllerParams::recycle_latency)
        .def_readwrite("ruby_system", &RubyControllerParams::ruby_system)
        .def_readwrite("system", &RubyControllerParams::system)
        .def_readwrite("transitions_per_cycle", &RubyControllerParams::transitions_per_cycle)
        .def_readwrite("upstream_destinations", &RubyControllerParams::upstream_destinations)
        .def_readwrite("version", &RubyControllerParams::version)
        .def_readwrite("port_memory_out_port_connection_count", &RubyControllerParams::port_memory_out_port_connection_count)
        ;

    py::class_<gem5::ruby::AbstractController, gem5::ClockedObject, std::unique_ptr<gem5::ruby::AbstractController, py::nodelete>>(m, "gem5_COLONS_ruby_COLONS_AbstractController")
        ;

}

static EmbeddedPyBind embed_obj("RubyController", module_init, "ClockedObject");

} // namespace gem5
