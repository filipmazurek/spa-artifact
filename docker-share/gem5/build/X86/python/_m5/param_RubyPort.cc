/**
 * DO NOT EDIT THIS FILE!
 * File automatically generated by
 *   build_tools/sim_object_param_struct_cc.py:297
 */

#include "pybind11/pybind11.h"
#include "pybind11/stl.h"

#include <type_traits>

#include "base/compiler.hh"
#include "params/RubyPort.hh"
#include "sim/init.hh"
#include "sim/sim_object.hh"

#include "mem/ruby/system/RubyPort.hh"

#include "mem/ruby/system/RubySystem.hh"
#include "sim/system.hh"
#include "base/types.hh"
namespace py = pybind11;

namespace gem5
{

static void
module_init(py::module_ &m_internal)
{
py::module_ m = m_internal.def_submodule("param_RubyPort");
    py::class_<RubyPortParams, ClockedObjectParams, std::unique_ptr<RubyPortParams, py::nodelete>>(m, "RubyPortParams")
        .def_readwrite("is_cpu_sequencer", &RubyPortParams::is_cpu_sequencer)
        .def_readwrite("no_retry_on_stall", &RubyPortParams::no_retry_on_stall)
        .def_readwrite("ruby_system", &RubyPortParams::ruby_system)
        .def_readwrite("support_data_reqs", &RubyPortParams::support_data_reqs)
        .def_readwrite("support_inst_reqs", &RubyPortParams::support_inst_reqs)
        .def_readwrite("system", &RubyPortParams::system)
        .def_readwrite("using_ruby_tester", &RubyPortParams::using_ruby_tester)
        .def_readwrite("version", &RubyPortParams::version)
        .def_readwrite("port_in_ports_connection_count", &RubyPortParams::port_in_ports_connection_count)
        .def_readwrite("port_interrupt_out_port_connection_count", &RubyPortParams::port_interrupt_out_port_connection_count)
        .def_readwrite("port_pio_request_port_connection_count", &RubyPortParams::port_pio_request_port_connection_count)
        .def_readwrite("port_mem_request_port_connection_count", &RubyPortParams::port_mem_request_port_connection_count)
        .def_readwrite("port_pio_response_port_connection_count", &RubyPortParams::port_pio_response_port_connection_count)
        ;

    py::class_<gem5::ruby::RubyPort, gem5::ClockedObject, std::unique_ptr<gem5::ruby::RubyPort, py::nodelete>>(m, "gem5_COLONS_ruby_COLONS_RubyPort")
        ;

}

static EmbeddedPyBind embed_obj("RubyPort", module_init, "ClockedObject");

} // namespace gem5
