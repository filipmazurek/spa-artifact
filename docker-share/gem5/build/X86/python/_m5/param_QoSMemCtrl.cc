/**
 * DO NOT EDIT THIS FILE!
 * File automatically generated by
 *   build_tools/sim_object_param_struct_cc.py:297
 */

#include "pybind11/pybind11.h"
#include "pybind11/stl.h"

#include <type_traits>

#include "base/compiler.hh"
#include "params/QoSMemCtrl.hh"
#include "sim/init.hh"
#include "sim/sim_object.hh"

#include "mem/qos/mem_ctrl.hh"

#include "mem/qos/policy.hh"
#include "base/types.hh"
#include "enums/QoSQPolicy.hh"
#include <vector>
#include <string>
#include "mem/qos/turnaround_policy.hh"
#include "sim/system.hh"
namespace py = pybind11;

namespace gem5
{

static void
module_init(py::module_ &m_internal)
{
py::module_ m = m_internal.def_submodule("param_QoSMemCtrl");
    py::class_<QoSMemCtrlParams, ClockedObjectParams, std::unique_ptr<QoSMemCtrlParams, py::nodelete>>(m, "QoSMemCtrlParams")
        .def_readwrite("qos_policy", &QoSMemCtrlParams::qos_policy)
        .def_readwrite("qos_priorities", &QoSMemCtrlParams::qos_priorities)
        .def_readwrite("qos_priority_escalation", &QoSMemCtrlParams::qos_priority_escalation)
        .def_readwrite("qos_q_policy", &QoSMemCtrlParams::qos_q_policy)
        .def_readwrite("qos_requestors", &QoSMemCtrlParams::qos_requestors)
        .def_readwrite("qos_syncro_scheduler", &QoSMemCtrlParams::qos_syncro_scheduler)
        .def_readwrite("qos_turnaround_policy", &QoSMemCtrlParams::qos_turnaround_policy)
        .def_readwrite("system", &QoSMemCtrlParams::system)
        ;

    py::class_<gem5::memory::qos::MemCtrl, gem5::ClockedObject, std::unique_ptr<gem5::memory::qos::MemCtrl, py::nodelete>>(m, "gem5_COLONS_memory_COLONS_qos_COLONS_MemCtrl")
        ;

}

static EmbeddedPyBind embed_obj("QoSMemCtrl", module_init, "ClockedObject");

} // namespace gem5
