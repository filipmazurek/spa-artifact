/**
 * DO NOT EDIT THIS FILE!
 * File automatically generated by
 *   build_tools/sim_object_param_struct_hh.py:235
 */

#ifndef __PARAMS__IrregularStreamBufferPrefetcher__
#define __PARAMS__IrregularStreamBufferPrefetcher__

namespace gem5 {
namespace prefetch {
class IrregularStreamBuffer;
} // namespace prefetch
} // namespace gem5
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "params/BaseIndexingPolicy.hh"
#include <cstddef>
#include "params/BaseReplacementPolicy.hh"
#include <cstddef>
#include "params/BaseIndexingPolicy.hh"
#include <cstddef>
#include "params/BaseReplacementPolicy.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "params/BaseIndexingPolicy.hh"
#include <cstddef>
#include "params/BaseReplacementPolicy.hh"

#include "params/QueuedPrefetcher.hh"

namespace gem5
{
struct IrregularStreamBufferPrefetcherParams
    : public QueuedPrefetcherParams
{
    gem5::prefetch::IrregularStreamBuffer * create() const;
    unsigned address_map_cache_assoc;
    uint64_t address_map_cache_entries;
    unsigned chunk_size;
    unsigned degree;
    unsigned num_counter_bits;
    unsigned prefetch_candidates_per_entry;
    gem5::BaseIndexingPolicy * ps_address_map_cache_indexing_policy;
    gem5::replacement_policy::Base * ps_address_map_cache_replacement_policy;
    gem5::BaseIndexingPolicy * sp_address_map_cache_indexing_policy;
    gem5::replacement_policy::Base * sp_address_map_cache_replacement_policy;
    unsigned training_unit_assoc;
    uint64_t training_unit_entries;
    gem5::BaseIndexingPolicy * training_unit_indexing_policy;
    gem5::replacement_policy::Base * training_unit_replacement_policy;
};

} // namespace gem5

#endif // __PARAMS__IrregularStreamBufferPrefetcher__
