/**
 * DO NOT EDIT THIS FILE!
 * File automatically generated by
 *   build_tools/sim_object_param_struct_hh.py:235
 */

#ifndef __PARAMS__LoopPredictor__
#define __PARAMS__LoopPredictor__

namespace gem5 {
namespace branch_prediction {
class LoopPredictor;
} // namespace branch_prediction
} // namespace gem5
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include <cstddef>
#include <cstddef>
#include <cstddef>
#include <cstddef>
#include <cstddef>
#include "base/types.hh"

#include "params/SimObject.hh"

namespace gem5
{
struct LoopPredictorParams
    : public SimObjectParams
{
    gem5::branch_prediction::LoopPredictor * create() const;
    unsigned initialLoopAge;
    unsigned initialLoopIter;
    unsigned logLoopTableAssoc;
    unsigned logSizeLoopPred;
    unsigned loopTableAgeBits;
    unsigned loopTableConfidenceBits;
    unsigned loopTableIterBits;
    unsigned loopTableTagBits;
    bool optionalAgeReset;
    bool restrictAllocation;
    bool useDirectionBit;
    bool useHashing;
    bool useSpeculation;
    unsigned withLoopBits;
};

} // namespace gem5

#endif // __PARAMS__LoopPredictor__
