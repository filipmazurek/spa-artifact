/**
 * DO NOT EDIT THIS FILE!
 * File automatically generated by
 *   build_tools/sim_object_param_struct_hh.py:235
 */

#ifndef __PARAMS__BaseMinorCPU__
#define __PARAMS__BaseMinorCPU__

namespace gem5 {
class MinorCPU;
} // namespace gem5
#include <cstddef>
#include "params/BranchPredictor.hh"
#include <cstddef>
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include <cstddef>
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include <cstddef>
#include "params/MinorFUPool.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include <cstddef>
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "enums/ThreadPolicy.hh"

#include "params/BaseCPU.hh"

#include "enums/ThreadPolicy.hh"

namespace gem5
{
struct BaseMinorCPUParams
    : public BaseCPUParams
{
    gem5::MinorCPU * create() const;
    gem5::branch_prediction::BPredUnit * branchPred;
    bool decodeCycleInput;
    unsigned decodeInputBufferSize;
    unsigned decodeInputWidth;
    Cycles decodeToExecuteForwardDelay;
    bool enableIdling;
    bool executeAllowEarlyMemoryIssue;
    Cycles executeBranchDelay;
    unsigned executeCommitLimit;
    bool executeCycleInput;
    gem5::MinorFUPool * executeFuncUnits;
    unsigned executeInputBufferSize;
    unsigned executeInputWidth;
    unsigned executeIssueLimit;
    unsigned executeLSQMaxStoreBufferStoresPerCycle;
    unsigned executeLSQRequestsQueueSize;
    unsigned executeLSQStoreBufferSize;
    unsigned executeLSQTransfersQueueSize;
    unsigned executeMaxAccessesInMemory;
    unsigned executeMemoryCommitLimit;
    unsigned executeMemoryIssueLimit;
    unsigned executeMemoryWidth;
    bool executeSetTraceTimeOnCommit;
    bool executeSetTraceTimeOnIssue;
    unsigned fetch1FetchLimit;
    unsigned fetch1LineSnapWidth;
    unsigned fetch1LineWidth;
    Cycles fetch1ToFetch2BackwardDelay;
    Cycles fetch1ToFetch2ForwardDelay;
    bool fetch2CycleInput;
    unsigned fetch2InputBufferSize;
    Cycles fetch2ToDecodeForwardDelay;
    enums::ThreadPolicy threadPolicy;
};

} // namespace gem5

#endif // __PARAMS__BaseMinorCPU__
