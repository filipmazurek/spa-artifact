/**
 * DO NOT EDIT THIS FILE!
 * File automatically generated by
 *   build_tools/sim_object_param_struct_hh.py:235
 */

#ifndef __PARAMS__MultiperspectivePerceptron__
#define __PARAMS__MultiperspectivePerceptron__

namespace gem5 {
namespace branch_prediction {
class MultiperspectivePerceptron;
} // namespace branch_prediction
} // namespace gem5
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include <cstddef>
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>

#include "params/BranchPredictor.hh"

namespace gem5
{
struct MultiperspectivePerceptronParams
    : public BranchPredictorParams
{
    int bias0;
    int bias1;
    int biasmostly0;
    int biasmostly1;
    int block_size;
    int budgetbits;
    int decay;
    int extra_rounds;
    double fudge;
    bool hash_taken;
    int hshift;
    bool ignore_path_size;
    uint64_t imli_mask1;
    uint64_t imli_mask4;
    int initial_ghist_length;
    int initial_theta;
    int local_history_length;
    int n_sign_bits;
    int nbest;
    int num_filter_entries;
    int num_local_histories;
    int pcbit;
    int pcshift;
    uint64_t recencypos_mask;
    int record_mask;
    bool speculative_update;
    int speed;
    int threshold;
    int tunebits;
    bool tuneonly;
};

} // namespace gem5

#endif // __PARAMS__MultiperspectivePerceptron__
