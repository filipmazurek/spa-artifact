/**
 * DO NOT EDIT THIS FILE!
 * File automatically generated by
 *   build_tools/sim_object_param_struct_hh.py:235
 */

#ifndef __PARAMS__X86SMBiosBiosInformation__
#define __PARAMS__X86SMBiosBiosInformation__

namespace gem5 {
namespace X86ISA {
namespace smbios {
class BiosInformation;
} // namespace smbios
} // namespace X86ISA
} // namespace gem5
#include <vector>
#include "enums/ExtCharacteristic.hh"
#include <vector>
#include "enums/Characteristic.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include <string>
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include <string>
#include <cstddef>
#include <string>

#include "params/X86SMBiosSMBiosStructure.hh"

#include "enums/ExtCharacteristic.hh"

#include "enums/Characteristic.hh"

namespace gem5
{
struct X86SMBiosBiosInformationParams
    : public X86SMBiosSMBiosStructureParams
{
    gem5::X86ISA::smbios::BiosInformation * create() const;
    std::vector< enums::ExtCharacteristic > characteristic_ext_bytes;
    std::vector< enums::Characteristic > characteristics;
    uint8_t emb_cont_firmware_major;
    uint8_t emb_cont_firmware_minor;
    uint8_t major;
    uint8_t minor;
    std::string release_date;
    uint8_t rom_size;
    uint16_t starting_addr_segment;
    std::string vendor;
    std::string version;
};

} // namespace gem5

#endif // __PARAMS__X86SMBiosBiosInformation__
