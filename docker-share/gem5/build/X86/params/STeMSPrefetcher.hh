/**
 * DO NOT EDIT THIS FILE!
 * File automatically generated by
 *   build_tools/sim_object_param_struct_hh.py:235
 */

#ifndef __PARAMS__STeMSPrefetcher__
#define __PARAMS__STeMSPrefetcher__

namespace gem5 {
namespace prefetch {
class STeMS;
} // namespace prefetch
} // namespace gem5
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "params/BaseIndexingPolicy.hh"
#include <cstddef>
#include "params/BaseReplacementPolicy.hh"
#include <cstddef>
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "params/BaseIndexingPolicy.hh"
#include <cstddef>
#include "params/BaseReplacementPolicy.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"

#include "params/QueuedPrefetcher.hh"

namespace gem5
{
struct STeMSPrefetcherParams
    : public QueuedPrefetcherParams
{
    gem5::prefetch::STeMS * create() const;
    unsigned active_generation_table_assoc;
    uint64_t active_generation_table_entries;
    gem5::BaseIndexingPolicy * active_generation_table_indexing_policy;
    gem5::replacement_policy::Base * active_generation_table_replacement_policy;
    bool add_duplicate_entries_to_rmob;
    unsigned pattern_sequence_table_assoc;
    uint64_t pattern_sequence_table_entries;
    gem5::BaseIndexingPolicy * pattern_sequence_table_indexing_policy;
    gem5::replacement_policy::Base * pattern_sequence_table_replacement_policy;
    unsigned reconstruction_entries;
    unsigned region_miss_order_buffer_entries;
    uint64_t spatial_region_size;
};

} // namespace gem5

#endif // __PARAMS__STeMSPrefetcher__
