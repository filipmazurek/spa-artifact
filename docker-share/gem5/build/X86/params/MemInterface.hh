/**
 * DO NOT EDIT THIS FILE!
 * File automatically generated by
 *   build_tools/sim_object_param_struct_hh.py:235
 */

#ifndef __PARAMS__MemInterface__
#define __PARAMS__MemInterface__

namespace gem5 {
namespace memory {
class MemInterface;
} // namespace memory
} // namespace gem5
#include <cstddef>
#include "enums/AddrMap.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"

#include "params/AbstractMemory.hh"

#include "enums/AddrMap.hh"

namespace gem5
{
struct MemInterfaceParams
    : public AbstractMemoryParams
{
    enums::AddrMap addr_mapping;
    unsigned banks_per_rank;
    unsigned burst_length;
    unsigned device_bus_width;
    uint64_t device_rowbuffer_size;
    uint64_t device_size;
    unsigned devices_per_rank;
    unsigned ranks_per_channel;
    unsigned read_buffer_size;
    Tick tBURST;
    Tick tCK;
    Tick tCS;
    Tick tRTW;
    Tick tWTR;
    unsigned write_buffer_size;
};

} // namespace gem5

#endif // __PARAMS__MemInterface__
