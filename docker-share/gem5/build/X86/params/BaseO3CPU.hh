/**
 * DO NOT EDIT THIS FILE!
 * File automatically generated by
 *   build_tools/sim_object_param_struct_hh.py:235
 */

#ifndef __PARAMS__BaseO3CPU__
#define __PARAMS__BaseO3CPU__

namespace gem5 {
namespace o3 {
class CPU;
} // namespace o3
} // namespace gem5
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "params/BranchPredictor.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "params/FUPool.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "enums/CommitPolicy.hh"
#include <cstddef>
#include "enums/SMTFetchPolicy.hh"
#include <cstddef>
#include "enums/SMTQueuePolicy.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "enums/SMTQueuePolicy.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "enums/SMTQueuePolicy.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"

#include "params/BaseCPU.hh"

#include "enums/CommitPolicy.hh"

#include "enums/SMTFetchPolicy.hh"

#include "enums/SMTQueuePolicy.hh"

#include "enums/SMTQueuePolicy.hh"

#include "enums/SMTQueuePolicy.hh"

namespace gem5
{
struct BaseO3CPUParams
    : public BaseCPUParams
{
    gem5::o3::CPU * create() const;
    unsigned LFSTSize;
    unsigned LQEntries;
    bool LSQCheckLoads;
    unsigned LSQDepCheckShift;
    unsigned SQEntries;
    unsigned SSITSize;
    unsigned activity;
    unsigned backComSize;
    gem5::branch_prediction::BPredUnit * branchPred;
    unsigned cacheLoadPorts;
    unsigned cacheStorePorts;
    Cycles commitToDecodeDelay;
    Cycles commitToFetchDelay;
    Cycles commitToIEWDelay;
    Cycles commitToRenameDelay;
    unsigned commitWidth;
    Cycles decodeToFetchDelay;
    Cycles decodeToRenameDelay;
    unsigned decodeWidth;
    unsigned dispatchWidth;
    unsigned fetchBufferSize;
    unsigned fetchQueueSize;
    Cycles fetchToDecodeDelay;
    Cycles fetchTrapLatency;
    unsigned fetchWidth;
    unsigned forwardComSize;
    gem5::o3::FUPool * fuPool;
    Cycles iewToCommitDelay;
    Cycles iewToDecodeDelay;
    Cycles iewToFetchDelay;
    Cycles iewToRenameDelay;
    Cycles issueToExecuteDelay;
    unsigned issueWidth;
    bool needsTSO;
    unsigned numIQEntries;
    unsigned numPhysCCRegs;
    unsigned numPhysFloatRegs;
    unsigned numPhysIntRegs;
    unsigned numPhysVecPredRegs;
    unsigned numPhysVecRegs;
    unsigned numROBEntries;
    unsigned numRobs;
    Cycles renameToDecodeDelay;
    Cycles renameToFetchDelay;
    Cycles renameToIEWDelay;
    Cycles renameToROBDelay;
    unsigned renameWidth;
    CommitPolicy smtCommitPolicy;
    SMTFetchPolicy smtFetchPolicy;
    SMTQueuePolicy smtIQPolicy;
    int smtIQThreshold;
    SMTQueuePolicy smtLSQPolicy;
    int smtLSQThreshold;
    unsigned smtNumFetchingThreads;
    SMTQueuePolicy smtROBPolicy;
    int smtROBThreshold;
    unsigned squashWidth;
    unsigned store_set_clear_period;
    Cycles trapLatency;
    unsigned wbWidth;
};

} // namespace gem5

#endif // __PARAMS__BaseO3CPU__
