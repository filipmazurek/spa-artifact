/**
 * DO NOT EDIT THIS FILE!
 * File automatically generated by
 *   build_tools/sim_object_param_struct_hh.py:235
 */

#ifndef __PARAMS__FrequentValuesCompressor__
#define __PARAMS__FrequentValuesCompressor__

namespace gem5 {
namespace compression {
class FrequentValues;
} // namespace compression
} // namespace gem5
#include <cstddef>
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "params/BaseIndexingPolicy.hh"
#include <cstddef>
#include "params/BaseReplacementPolicy.hh"

#include "params/BaseCacheCompressor.hh"

namespace gem5
{
struct FrequentValuesCompressorParams
    : public BaseCacheCompressorParams
{
    gem5::compression::FrequentValues * create() const;
    bool check_saturation;
    unsigned code_generation_ticks;
    unsigned counter_bits;
    unsigned max_code_length;
    unsigned num_samples;
    int vft_assoc;
    uint64_t vft_entries;
    gem5::BaseIndexingPolicy * vft_indexing_policy;
    gem5::replacement_policy::Base * vft_replacement_policy;
};

} // namespace gem5

#endif // __PARAMS__FrequentValuesCompressor__
