/**
 * DO NOT EDIT THIS FILE!
 * File automatically generated by
 *   /shared/gem5/src/mem/slicc/symbols/Type.py:643
 */

#ifndef __TriggerType_HH__
#define __TriggerType_HH__

#include <iostream>
#include <string>

namespace gem5
{

namespace ruby
{


// Class definition
/** \enum TriggerType
 *  \brief ...
 */
enum TriggerType {
    TriggerType_FIRST,
    TriggerType_L2_to_L1 = TriggerType_FIRST, /**< L2 to L1 transfer */
    TriggerType_ALL_ACKS, /**< See corresponding event */
    TriggerType_ALL_ACKS_OWNER_EXISTS, /**< See corresponding event */
    TriggerType_ALL_ACKS_NO_SHARERS, /**< See corresponding event */
    TriggerType_ALL_UNBLOCKS, /**< all unblockS received */
    TriggerType_NUM
};

// Code to convert from a string to the enumeration
TriggerType string_to_TriggerType(const ::std::string& str);

// Code to convert state to a string
::std::string TriggerType_to_string(const TriggerType& obj);

// Code to increment an enumeration type
TriggerType &operator++(TriggerType &e);

::std::ostream&
operator<<(::std::ostream& out, const TriggerType& obj);

} // namespace ruby
} // namespace gem5
#endif // __TriggerType_HH__
