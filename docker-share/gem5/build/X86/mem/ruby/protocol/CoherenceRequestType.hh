/**
 * DO NOT EDIT THIS FILE!
 * File automatically generated by
 *   /shared/gem5/src/mem/slicc/symbols/Type.py:643
 */

#ifndef __CoherenceRequestType_HH__
#define __CoherenceRequestType_HH__

#include <iostream>
#include <string>

namespace gem5
{

namespace ruby
{


// Class definition
/** \enum CoherenceRequestType
 *  \brief ...
 */
enum CoherenceRequestType {
    CoherenceRequestType_FIRST,
    CoherenceRequestType_GETX = CoherenceRequestType_FIRST, /**< Get eXclusive */
    CoherenceRequestType_GETS, /**< Get Shared */
    CoherenceRequestType_MERGED_GETS, /**< Get Shared */
    CoherenceRequestType_PUT, /**< Put Ownership */
    CoherenceRequestType_WB_ACK, /**< Writeback ack */
    CoherenceRequestType_WB_NACK, /**< Writeback neg. ack */
    CoherenceRequestType_PUTF, /**< PUT on a Flush */
    CoherenceRequestType_GETF, /**< Issue exclusive for Flushing */
    CoherenceRequestType_BLOCK_ACK, /**< Dir Block ack */
    CoherenceRequestType_INV, /**< Invalidate */
    CoherenceRequestType_NUM
};

// Code to convert from a string to the enumeration
CoherenceRequestType string_to_CoherenceRequestType(const ::std::string& str);

// Code to convert state to a string
::std::string CoherenceRequestType_to_string(const CoherenceRequestType& obj);

// Code to increment an enumeration type
CoherenceRequestType &operator++(CoherenceRequestType &e);

::std::ostream&
operator<<(::std::ostream& out, const CoherenceRequestType& obj);

} // namespace ruby
} // namespace gem5
#endif // __CoherenceRequestType_HH__
