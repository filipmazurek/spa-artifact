/**
 * DO NOT EDIT THIS FILE!
 * File automatically generated by
 *   /shared/gem5/src/mem/slicc/symbols/Type.py:643
 */

#ifndef __Directory_Event_HH__
#define __Directory_Event_HH__

#include <iostream>
#include <string>

namespace gem5
{

namespace ruby
{


// Class definition
/** \enum Directory_Event
 *  \brief Directory events
 */
enum Directory_Event {
    Directory_Event_FIRST,
    Directory_Event_GETX = Directory_Event_FIRST, /**< A GETX arrives */
    Directory_Event_GETS, /**< A GETS arrives */
    Directory_Event_PUT, /**< A PUT arrives */
    Directory_Event_Unblock, /**< An unblock message arrives */
    Directory_Event_UnblockS, /**< An unblock message arrives */
    Directory_Event_UnblockM, /**< An unblock message arrives */
    Directory_Event_Writeback_Clean, /**< The final part of a PutX (no data) */
    Directory_Event_Writeback_Dirty, /**< The final part of a PutX (data) */
    Directory_Event_Writeback_Exclusive_Clean, /**< The final part of a PutX (no data, exclusive) */
    Directory_Event_Writeback_Exclusive_Dirty, /**< The final part of a PutX (data, exclusive) */
    Directory_Event_Pf_Replacement, /**< probe filter replacement */
    Directory_Event_DMA_READ, /**< A DMA Read memory request */
    Directory_Event_DMA_WRITE, /**< A DMA Write memory request */
    Directory_Event_Memory_Data, /**< Fetched data from memory arrives */
    Directory_Event_Memory_Ack, /**< Writeback Ack from memory arrives */
    Directory_Event_Ack, /**< Received an ack message */
    Directory_Event_Shared_Ack, /**< Received an ack message, responder has a shared copy */
    Directory_Event_Shared_Data, /**< Received a data message, responder has a shared copy */
    Directory_Event_Data, /**< Received a data message, responder had a owner or exclusive copy, they gave it to us */
    Directory_Event_Exclusive_Data, /**< Received a data message, responder had an exclusive copy, they gave it to us */
    Directory_Event_All_acks_and_shared_data, /**< Received shared data and message acks */
    Directory_Event_All_acks_and_owner_data, /**< Received shared data and message acks */
    Directory_Event_All_acks_and_data_no_sharers, /**< Received all acks and no other processor has a shared copy */
    Directory_Event_All_Unblocks, /**< Received all unblocks for a merged gets request */
    Directory_Event_GETF, /**< A GETF arrives */
    Directory_Event_PUTF, /**< A PUTF arrives */
    Directory_Event_NUM
};

// Code to convert from a string to the enumeration
Directory_Event string_to_Directory_Event(const ::std::string& str);

// Code to convert state to a string
::std::string Directory_Event_to_string(const Directory_Event& obj);

// Code to increment an enumeration type
Directory_Event &operator++(Directory_Event &e);

::std::ostream&
operator<<(::std::ostream& out, const Directory_Event& obj);

} // namespace ruby
} // namespace gem5
#endif // __Directory_Event_HH__
