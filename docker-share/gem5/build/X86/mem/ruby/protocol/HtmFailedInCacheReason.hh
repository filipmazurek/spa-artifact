/**
 * DO NOT EDIT THIS FILE!
 * File automatically generated by
 *   /shared/gem5/src/mem/slicc/symbols/Type.py:643
 */

#ifndef __HtmFailedInCacheReason_HH__
#define __HtmFailedInCacheReason_HH__

#include <iostream>
#include <string>

namespace gem5
{

namespace ruby
{


// Class definition
/** \enum HtmFailedInCacheReason
 *  \brief ...
 */
enum HtmFailedInCacheReason {
    HtmFailedInCacheReason_FIRST,
    HtmFailedInCacheReason_NO_FAIL = HtmFailedInCacheReason_FIRST, /**< no failure in cache */
    HtmFailedInCacheReason_FAIL_SELF, /**< failed due local cache's replacement policy */
    HtmFailedInCacheReason_FAIL_REMOTE, /**< failed due remote invalidation */
    HtmFailedInCacheReason_FAIL_OTHER, /**< failed due other circumstances */
    HtmFailedInCacheReason_NUM
};

// Code to convert from a string to the enumeration
HtmFailedInCacheReason string_to_HtmFailedInCacheReason(const ::std::string& str);

// Code to convert state to a string
::std::string HtmFailedInCacheReason_to_string(const HtmFailedInCacheReason& obj);

// Code to increment an enumeration type
HtmFailedInCacheReason &operator++(HtmFailedInCacheReason &e);

::std::ostream&
operator<<(::std::ostream& out, const HtmFailedInCacheReason& obj);

} // namespace ruby
} // namespace gem5
#endif // __HtmFailedInCacheReason_HH__
