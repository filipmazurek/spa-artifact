/**
 * DO NOT EDIT THIS FILE!
 * File automatically generated by
 *   /shared/gem5/src/mem/slicc/symbols/Type.py:643
 */

#ifndef __L1Cache_Event_HH__
#define __L1Cache_Event_HH__

#include <iostream>
#include <string>

namespace gem5
{

namespace ruby
{


// Class definition
/** \enum L1Cache_Event
 *  \brief Cache events
 */
enum L1Cache_Event {
    L1Cache_Event_FIRST,
    L1Cache_Event_Load = L1Cache_Event_FIRST, /**< Load request from the processor */
    L1Cache_Event_Ifetch, /**< I-fetch request from the processor */
    L1Cache_Event_Store, /**< Store request from the processor */
    L1Cache_Event_L2_Replacement, /**< L2 Replacement */
    L1Cache_Event_L1_to_L2, /**< L1 to L2 transfer */
    L1Cache_Event_Trigger_L2_to_L1D, /**< Trigger L2 to L1-Data transfer */
    L1Cache_Event_Trigger_L2_to_L1I, /**< Trigger L2 to L1-Instruction transfer */
    L1Cache_Event_Complete_L2_to_L1, /**< L2 to L1 transfer completed */
    L1Cache_Event_Other_GETX, /**< A GetX from another processor */
    L1Cache_Event_Other_GETS, /**< A GetS from another processor */
    L1Cache_Event_Merged_GETS, /**< A Merged GetS from another processor */
    L1Cache_Event_Other_GETS_No_Mig, /**< A GetS from another processor */
    L1Cache_Event_NC_DMA_GETS, /**< special GetS when only DMA exists */
    L1Cache_Event_Invalidate, /**< Invalidate block */
    L1Cache_Event_Ack, /**< Received an ack message */
    L1Cache_Event_Shared_Ack, /**< Received an ack message, responder has a shared copy */
    L1Cache_Event_Data, /**< Received a data message */
    L1Cache_Event_Shared_Data, /**< Received a data message, responder has a shared copy */
    L1Cache_Event_Exclusive_Data, /**< Received a data message, responder had an exclusive copy, they gave it to us */
    L1Cache_Event_Writeback_Ack, /**< Writeback O.K. from directory */
    L1Cache_Event_Writeback_Nack, /**< Writeback not O.K. from directory */
    L1Cache_Event_All_acks, /**< Received all required data and message acks */
    L1Cache_Event_All_acks_no_sharers, /**< Received all acks and no other processor has a shared copy */
    L1Cache_Event_Flush_line, /**< flush the cache line from all caches */
    L1Cache_Event_Block_Ack, /**< the directory is blocked and ready for the flush */
    L1Cache_Event_NUM
};

// Code to convert from a string to the enumeration
L1Cache_Event string_to_L1Cache_Event(const ::std::string& str);

// Code to convert state to a string
::std::string L1Cache_Event_to_string(const L1Cache_Event& obj);

// Code to increment an enumeration type
L1Cache_Event &operator++(L1Cache_Event &e);

::std::ostream&
operator<<(::std::ostream& out, const L1Cache_Event& obj);

} // namespace ruby
} // namespace gem5
#endif // __L1Cache_Event_HH__
